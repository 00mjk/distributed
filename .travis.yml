language: python
sudo: false
services:
  - docker

env:
  global:
    - CACHE_DIR=$HOME/.cache/docker
    - CACHE_HADOOP_IMAGE=$CACHE_DIR/hadoop-image.tar.gz

matrix:
  fast_finish: true
  include:
    #- python: "2.7"
    #- python: "3.4"
      #env: COVERAGE=true
    #- python: "3.5"
    #- python: "2.7"
      #env: HDFS=true
      #sudo: true
      #dist: trusty
    - python: "3.5"
      env: HDFS=true
      sudo: true
      dist: trusty
      cache:
        directories:
          - $CACHE_DIR

before_install:
  - |
    if [[ $HDFS == true ]]; then
        # See http://rundef.com/fast-travis-ci-docker-build
        mkdir -p $CACHE_DIR
        if [ -f ${CACHE_HADOOP_IMAGE} ]; then
            gunzip -c ${CACHE_HADOOP_IMAGE} | docker load
        fi
        pushd continuous_integration
        docker build -t distributed-hdfs-test .
        if [ ! -f ${CACHE_HADOOP_IMAGE} ]; then
            docker save sequenceiq/hadoop-docker:2.7.1 | gzip > ${CACHE_HADOOP_IMAGE}
        fi
        # Run HDFS
        ./run-hdfs.sh || exit 1
        popd
        sudo bash -c 'echo "127.0.0.1 hdfs-container" >> /etc/hosts'
    fi;

install:
  # Install conda
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  # Install dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  - conda install -q pytest pytest-timeout coverage tornado toolz dill futures dask ipywidgets psutil bokeh requests joblib mock ipykernel jupyter_client h5py netcdf4
  - |
    if [[ $HDFS == true ]]; then
        conda install -q libxml2 krb5 boost
        conda install -q -c dask libhdfs3 libgsasl libntlm
        pip install git+https://github.com/dask/hdfs3 --upgrade
    fi;
  - pip install git+https://github.com/dask/dask.git --upgrade
  - pip install git+https://github.com/joblib/joblib.git --upgrade
  - pip install git+https://github.com/dask/s3fs.git --upgrade

  # Install distributed
  - python setup.py install

script:
    - |
      if [[ $HDFS == true ]]; then
        py.test distributed/tests/test_hdfs.py --verbose -r s --timeout-method=thread --timeout=20
      elif [[ $COVERAGE == true ]]; then
        coverage run $(which py.test) distributed -m "not avoid_travis" --verbose;
      else
        py.test -m "not avoid_travis" distributed --verbose;
      fi;

after_success:
    - if [[ $COVERAGE == true ]]; then coverage report; pip install coveralls ; coveralls ; fi

notifications:
  email: false
